{"ast":null,"code":"var _jsxFileName = \"/home/jesse/Documents/Git/Project/Template2/xml2json/src/components/Xml2Json.jsx\";\nimport React, { Component } from 'react';\nimport { Column, Box, Button } from 'bloomer';\n\nvar convert = require('xml-js');\n\nclass Xml2Json extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: ''\n    };\n    this.getFile = this.getFileXml.bind(this);\n    this.getFile = this.getFileJson.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    this.setState({\n      file: ''\n    });\n  }\n\n  getFileXml() {\n    let temp = document.getElementById(\"xml\").value;\n    console.log(temp);\n    let result = convert.xml2json(temp, {\n      compact: true,\n      spaces: 4\n    });\n    console.log(result);\n    this.setState({\n      file: result\n    });\n    this.props.handler({\n      xmlFile: this.state.file\n    });\n    document.getElementById(\"json\").value = result;\n  }\n\n  getFileJson() {\n    let temp = document.getElementById(\"xml\").value;\n    console.log(temp);\n    let result = convert.json2xml(temp, {\n      compact: true,\n      ignoreComment: true,\n      spaces: 4\n    });\n    console.log(result);\n    this.setState({\n      file: result\n    });\n    this.props.handler({\n      xmlFile: this.state.file\n    });\n    document.getElementById(\"json\").value = result;\n  }\n\n  render() {\n    return React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"textarea is-info\",\n      id: \"xml\",\n      placeholder: \"XML\",\n      rows: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })))), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Button, {\n      isColor: \"info\",\n      onClick: this.getFileXml,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Convert\"))), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"textarea is-info\",\n      id: \"json\",\n      placeholder: \"json\",\n      rows: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })))), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      isColor: \"info\",\n      onClick: this.getFileJson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Convert\"))));\n  }\n\n}\n\nexport default Xml2Json;","map":{"version":3,"sources":["/home/jesse/Documents/Git/Project/Template2/xml2json/src/components/Xml2Json.jsx"],"names":["React","Component","Column","Box","Button","convert","require","Xml2Json","constructor","props","state","file","getFile","getFileXml","bind","getFileJson","handleSubmit","setState","temp","document","getElementById","value","console","log","result","xml2json","compact","spaces","handler","xmlFile","json2xml","ignoreComment","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Column, Box, Button } from 'bloomer';\nvar convert = require('xml-js');\n\nclass Xml2Json extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: ''\n    }\n    this.getFile = this.getFileXml.bind(this);\n    this.getFile = this.getFileJson.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    this.setState({\n      file: ''\n    });\n  }\n\n  getFileXml() {\n    let temp = document.getElementById(\"xml\").value;\n    console.log(temp);\n    let result = convert.xml2json(temp, {compact: true, spaces: 4})\n    console.log(result);\n    this.setState({file: result});\n\n    this.props.handler({xmlFile: this.state.file});\n\n    document.getElementById(\"json\").value = result;\n\n  }\n\n  getFileJson() {\n    let temp = document.getElementById(\"xml\").value;\n    console.log(temp);\n    let result = convert.json2xml(temp, {compact: true,ignoreComment: true, spaces: 4})\n    console.log(result);\n    this.setState({file: result});\n\n    this.props.handler({xmlFile: this.state.file});\n\n    document.getElementById(\"json\").value = result;\n\n  }\n\n  render() {\n    return (\n      <Box>  \n        <Column>\n          <div className=\"field\"> \n              <div className=\"control\">\n                <textarea className=\"textarea is-info\" id=\"xml\" placeholder=\"XML\" rows=\"10\"></textarea>\n              </div>\n          </div>\n        </Column>\n        <Column>\n          <div className=\"menu-row\" >\n            <Button isColor='info' onClick={this.getFileXml}>Convert</Button>\n          </div>\n        </Column>\n        <Column>\n          <div className=\"field\">\n              <div className=\"control\">\n                  <textarea className=\"textarea is-info\" id=\"json\" placeholder=\"json\" rows=\"10\"></textarea>\n              </div>\n          </div>\n        </Column>\n        <Column>\n          <div className=\"menu-row\" >\n            <Button isColor='info' onClick={this.getFileJson}>Convert</Button>\n          </div>\n        </Column>\n      </Box>\n    )\n  }\n\n}\n\nexport default Xml2Json;\n"]},"metadata":{},"sourceType":"module"}